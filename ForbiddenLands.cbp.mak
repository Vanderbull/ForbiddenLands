#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.1                         #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I../../../../../usr/include/SDL2
CFLAGS = -w -std=c17 -pg -std=gnu++17
RESINC = 
LIBDIR = -L../../../../../usr/include/SDL2 -L/usr/include
LIB = 
LDFLAGS = -pg -lSDL2 -lSDL2main -lSDL2_image -lSDL2_mixer -lSDL2_ttf -lSDL2_net

INC_DEBUG = $(INC) -Iinclude
CFLAGS_DEBUG = $(CFLAGS) -g -std=gnu++17
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS) -lSDL2 -lSDL2_ttf -lSDL2_image -lSDL2_mixer -no-pie -pthread -lstdc++fs -lsqlite3
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/ForbiddenLands

INC_RELEASE = $(INC) -Iinclude
CFLAGS_RELEASE = $(CFLAGS) -O2 -std=c++17 -std=c++0x
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s -lSDL2 -lSDL2_ttf -lSDL2_image -lSDL2_mixer -no-pie -pthread -lstdc++fs -lGL -lGLU -lglut
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/ForbiddenLands

OBJ_DEBUG = $(OBJDIR_DEBUG)/src/randomizer.cpp.o $(OBJDIR_DEBUG)/src/portals.cpp.o $(OBJDIR_DEBUG)/src/main.cpp.o $(OBJDIR_DEBUG)/src/globals.cpp.o $(OBJDIR_DEBUG)/include/gameengine/createcharacterstate.cpp.o $(OBJDIR_DEBUG)/include/gameengine/menustate.cpp.o $(OBJDIR_DEBUG)/include/gameengine/loadmenustate.cpp.o $(OBJDIR_DEBUG)/include/gameengine/introstate.cpp.o $(OBJDIR_DEBUG)/include/gameengine/gameengine.cpp.o $(OBJDIR_DEBUG)/include/gameengine/playstate.cpp.o $(OBJDIR_DEBUG)/include/gameengine/characterstate.cpp.o $(OBJDIR_DEBUG)/include/gameengine/battlestate.cpp.o $(OBJDIR_DEBUG)/include/gameengine/shopstate.cpp.o $(OBJDIR_DEBUG)/include/gameengine/savemenustate.cpp.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/src/randomizer.cpp.x $(OBJDIR_RELEASE)/src/portals.cpp.x $(OBJDIR_RELEASE)/src/main.cpp.x $(OBJDIR_RELEASE)/src/globals.cpp.x $(OBJDIR_RELEASE)/include/gameengine/createcharacterstate.cpp.x $(OBJDIR_RELEASE)/include/gameengine/menustate.cpp.x $(OBJDIR_RELEASE)/include/gameengine/loadmenustate.cpp.x $(OBJDIR_RELEASE)/include/gameengine/introstate.cpp.x $(OBJDIR_RELEASE)/include/gameengine/gameengine.cpp.x $(OBJDIR_RELEASE)/include/gameengine/playstate.cpp.x $(OBJDIR_RELEASE)/include/gameengine/characterstate.cpp.x $(OBJDIR_RELEASE)/include/gameengine/battlestate.cpp.x $(OBJDIR_RELEASE)/include/gameengine/shopstate.cpp.x $(OBJDIR_RELEASE)/include/gameengine/savemenustate.cpp.x

all: before_build build_debug build_release after_build

clean: clean_debug clean_release

before_build: 
	#mkdir -p $(TARGET_OUTPUT_DIR)/data
	#python3  ~/Documents/Vanderbull/ForbiddenLands/dependency-graph-master/dependency_graph.py ../ForbiddenLands/ ../ForbiddenLands/dependency-graph

after_build: 
	#Syncing images files
	rsync -rtvu --delete images images $(TARGET_OUTPUT_DIR)/
	# Syncing sound files
	#rsync -rtvu --delete soundbible soundbible $(TARGET_OUTPUT_DIR)/
	# Syncing data files
	rsync -rtvu --delete data data $(TARGET_OUTPUT_DIR)/
	# Syncing font files
	rsync -rtvu --delete font font $(TARGET_OUTPUT_DIR)/
	# Syncing logs files
	rsync -rtvu --delete logs logs $(TARGET_OUTPUT_DIR)/
	# Syncing icons files
	rsync -rtvu --delete icons icons $(TARGET_OUTPUT_DIR)/

before_debug: 
	python3  ~/Documents/Vanderbull/ForbiddenLands/dependency-graph-master/dependency_graph.py ../ForbiddenLands/ ../ForbiddenLands/dependency-graph
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src
	test -d $(OBJDIR_DEBUG)/include/gameengine || mkdir -p $(OBJDIR_DEBUG)/include/gameengine

after_debug: 

build_debug: before_debug out_debug after_debug

debug: before_build build_debug after_build

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/src/randomizer.cpp.o: src/randomizer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/randomizer.cpp -o $(OBJDIR_DEBUG)/src/randomizer.cpp.o

$(OBJDIR_DEBUG)/src/portals.cpp.o: src/portals.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/portals.cpp -o $(OBJDIR_DEBUG)/src/portals.cpp.o

$(OBJDIR_DEBUG)/src/main.cpp.o: src/main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/main.cpp -o $(OBJDIR_DEBUG)/src/main.cpp.o

$(OBJDIR_DEBUG)/src/globals.cpp.o: src/globals.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/globals.cpp -o $(OBJDIR_DEBUG)/src/globals.cpp.o

$(OBJDIR_DEBUG)/include/gameengine/createcharacterstate.cpp.o: include/gameengine/createcharacterstate.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c include/gameengine/createcharacterstate.cpp -o $(OBJDIR_DEBUG)/include/gameengine/createcharacterstate.cpp.o

$(OBJDIR_DEBUG)/include/gameengine/menustate.cpp.o: include/gameengine/menustate.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c include/gameengine/menustate.cpp -o $(OBJDIR_DEBUG)/include/gameengine/menustate.cpp.o

$(OBJDIR_DEBUG)/include/gameengine/loadmenustate.cpp.o: include/gameengine/loadmenustate.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c include/gameengine/loadmenustate.cpp -o $(OBJDIR_DEBUG)/include/gameengine/loadmenustate.cpp.o

$(OBJDIR_DEBUG)/include/gameengine/introstate.cpp.o: include/gameengine/introstate.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c include/gameengine/introstate.cpp -o $(OBJDIR_DEBUG)/include/gameengine/introstate.cpp.o

$(OBJDIR_DEBUG)/include/gameengine/gameengine.cpp.o: include/gameengine/gameengine.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c include/gameengine/gameengine.cpp -o $(OBJDIR_DEBUG)/include/gameengine/gameengine.cpp.o

$(OBJDIR_DEBUG)/include/gameengine/playstate.cpp.o: include/gameengine/playstate.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c include/gameengine/playstate.cpp -o $(OBJDIR_DEBUG)/include/gameengine/playstate.cpp.o

$(OBJDIR_DEBUG)/include/gameengine/characterstate.cpp.o: include/gameengine/characterstate.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c include/gameengine/characterstate.cpp -o $(OBJDIR_DEBUG)/include/gameengine/characterstate.cpp.o

$(OBJDIR_DEBUG)/include/gameengine/battlestate.cpp.o: include/gameengine/battlestate.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c include/gameengine/battlestate.cpp -o $(OBJDIR_DEBUG)/include/gameengine/battlestate.cpp.o

$(OBJDIR_DEBUG)/include/gameengine/shopstate.cpp.o: include/gameengine/shopstate.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c include/gameengine/shopstate.cpp -o $(OBJDIR_DEBUG)/include/gameengine/shopstate.cpp.o

$(OBJDIR_DEBUG)/include/gameengine/savemenustate.cpp.o: include/gameengine/savemenustate.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c include/gameengine/savemenustate.cpp -o $(OBJDIR_DEBUG)/include/gameengine/savemenustate.cpp.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)/src
	rm -rf $(OBJDIR_DEBUG)/include/gameengine

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src
	test -d $(OBJDIR_RELEASE)/include/gameengine || mkdir -p $(OBJDIR_RELEASE)/include/gameengine

after_release: 

build_release: before_release out_release after_release

release: before_build build_release after_build

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)

$(OBJDIR_RELEASE)/src/randomizer.cpp.x: src/randomizer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/randomizer.cpp -o $(OBJDIR_RELEASE)/src/randomizer.cpp.x

$(OBJDIR_RELEASE)/src/portals.cpp.x: src/portals.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/portals.cpp -o $(OBJDIR_RELEASE)/src/portals.cpp.x

$(OBJDIR_RELEASE)/src/main.cpp.x: src/main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/main.cpp -o $(OBJDIR_RELEASE)/src/main.cpp.x

$(OBJDIR_RELEASE)/src/globals.cpp.x: src/globals.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/globals.cpp -o $(OBJDIR_RELEASE)/src/globals.cpp.x

$(OBJDIR_RELEASE)/include/gameengine/createcharacterstate.cpp.x: include/gameengine/createcharacterstate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c include/gameengine/createcharacterstate.cpp -o $(OBJDIR_RELEASE)/include/gameengine/createcharacterstate.cpp.x

$(OBJDIR_RELEASE)/include/gameengine/menustate.cpp.x: include/gameengine/menustate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c include/gameengine/menustate.cpp -o $(OBJDIR_RELEASE)/include/gameengine/menustate.cpp.x

$(OBJDIR_RELEASE)/include/gameengine/loadmenustate.cpp.x: include/gameengine/loadmenustate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c include/gameengine/loadmenustate.cpp -o $(OBJDIR_RELEASE)/include/gameengine/loadmenustate.cpp.x

$(OBJDIR_RELEASE)/include/gameengine/introstate.cpp.x: include/gameengine/introstate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c include/gameengine/introstate.cpp -o $(OBJDIR_RELEASE)/include/gameengine/introstate.cpp.x

$(OBJDIR_RELEASE)/include/gameengine/gameengine.cpp.x: include/gameengine/gameengine.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c include/gameengine/gameengine.cpp -o $(OBJDIR_RELEASE)/include/gameengine/gameengine.cpp.x

$(OBJDIR_RELEASE)/include/gameengine/playstate.cpp.x: include/gameengine/playstate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c include/gameengine/playstate.cpp -o $(OBJDIR_RELEASE)/include/gameengine/playstate.cpp.x

$(OBJDIR_RELEASE)/include/gameengine/characterstate.cpp.x: include/gameengine/characterstate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c include/gameengine/characterstate.cpp -o $(OBJDIR_RELEASE)/include/gameengine/characterstate.cpp.x

$(OBJDIR_RELEASE)/include/gameengine/battlestate.cpp.x: include/gameengine/battlestate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c include/gameengine/battlestate.cpp -o $(OBJDIR_RELEASE)/include/gameengine/battlestate.cpp.x

$(OBJDIR_RELEASE)/include/gameengine/shopstate.cpp.x: include/gameengine/shopstate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c include/gameengine/shopstate.cpp -o $(OBJDIR_RELEASE)/include/gameengine/shopstate.cpp.x

$(OBJDIR_RELEASE)/include/gameengine/savemenustate.cpp.x: include/gameengine/savemenustate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c include/gameengine/savemenustate.cpp -o $(OBJDIR_RELEASE)/include/gameengine/savemenustate.cpp.x

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)/src
	rm -rf $(OBJDIR_RELEASE)/include/gameengine

.PHONY: before_build after_build before_debug after_debug clean_debug before_release after_release clean_release

